Transition: (s1 s2) (t1 t2)

(s1 s2)
cond:
True
oper:
t6_6_reg_231 =   ( (  ( (  ( in2  ==  ( 0 - in3 )  ? 1 : 0 )  & 1 )  == 1 ?  ( (  (  ( ( in4  == 0 ? 1 :  0 )  & 1 )  == 1 ?  ( 0 - in2 ) :   ( in2  + in1  )  )  - in4  ) )  :   ( (  ( in1  == 4 ? 1 :  0 )  & 1 )  == 1 ?  ( in3  - in5  )   :  ( in2  + 4 )  )  )  + in4 ) ) ;

(t1 t2)
cond:
True
oper:
sub_ln21 = 0 - in3;
icmp_ln21 = in2 == sub_ln21 ? 1 : 0;
icmp_ln31 = in4 == 0 ? 1 : 0;
t6_3 = in2 + in1;
t6_4 = 0 - in2;
t6_5 = icmp_ln31 ? t6_4 : t6_3;
t4 = t6_5 - in4;
icmp_ln24 = in1 == 4 ? 1 : 0;
t4_1 = in2 + 4;
t4_2 = in3 - in5;
t4_3 = icmp_ln24 ? t4_2 : t4_1;
t4_4 = icmp_ln21 ? t4 : t4_3;
t6_6 = t4_4 + in4;

Transition: (s2 se) (t2 te)

(s2 se)
cond:
True
oper:
ap_done =  1;
if(ap_done==1){
	ap_return =  (  ( (  (  ( (  ( in5  == 0 ? 1 :  0 )  & 1 )  == 1 ?  ( (  ( in6  == 0 ? 1 :  0 )  & 1 )  == 1 ?  ( 8 - in4  )  :   ( in2  + 5 )  )  :  t6_6_reg_231 )  == 0 ? 1 :  0 )  & 1 ) )  == 1 ?  ( in5 + 8 )  :   ( in1  - 5)  ) ;
}

(t2 te)
cond:
True
oper:
in6 = in6;
icmp_ln19 = in5 == 0 ? 1 : 0;
icmp_ln41 = in6 == 0 ? 1 : 0;
t6 = in2 + 5;
t6_1 = 8 - in4;
t6_2 = icmp_ln41 ? t6_1 : t6;
t6_7 = icmp_ln19 ? t6_2 : t6_6;	
icmp_ln46 = t6_7 == 0 ? 1 : 0;
out1 = in1 - 5;
out1_1 = in5 + 8;
out1_2 = icmp_ln46 ? out1_1 : out1;

mapping:

(s1 t1)
::t6_6_reg_231 == ::t6_6

(s2 t2)
::ap_return == ::out1_2
::t6_6_reg_231 == ::t6_6

